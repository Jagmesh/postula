import { Markup } from 'telegraf';
import { CONFIG } from '../../../config.js';
import { BUTTONS_MARKUP } from '../../common/button/button.const.js';
import { Post } from '../../post/post.js';
import { Scheduler } from '../../../scheduler/scheduler.js';
import { PostDataContext } from '../../type';

export async function handleAccept(ctx: PostDataContext): Promise<void> {
  const { postData } = ctx;
  if (!postData) throw new Error('No post data');

  await ctx.telegram.editMessageReplyMarkup(
    CONFIG.TG_SUGGESTION_CHAT_ID,
    postData.review.buttonsMsgId,
    undefined,
    Markup.inlineKeyboard(
      [
        Markup.button.callback('üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å', `post_now:${postData.id}`),
        Markup.button.callback('üïí –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Ç–æ–º', `post_in_time:${postData.id}`),
        Markup.button.callback('üîô –ù–∞–∑–∞–¥', `main_menu:${postData.id}`),
      ],
      {
        columns: 1,
      }
    ).reply_markup
  );
}

export async function handleReject(ctx: PostDataContext, postService: Post) {
  const { postData } = ctx;
  if (!postData) throw new Error('No post data');

  await postService.reject(postData);
  await ctx.answerCbQuery('üëé –û—Ç–∫–ª–æ–Ω–µ–Ω–æ');
}

export async function handlePostNow(ctx: PostDataContext, postService: Post) {
  const { postData } = ctx;
  if (!postData) throw new Error('No post data');

  await postService.accept(postData);
  await ctx.answerCbQuery('üëç –ü—Ä–∏–Ω—è—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª');
}

export async function handlePostInTime(ctx: PostDataContext, scheduler: Scheduler) {
  const { postData } = ctx;
  if (!postData) throw new Error('No post data');

  await scheduler.queue(postData);
  await ctx.answerCbQuery('‚è≥ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ—Ç–ª–æ–∂–∫—É');
}

export async function handleMainMenu(ctx: PostDataContext) {
  const { postData } = ctx;
  if (!postData) throw new Error('No post data');

  await ctx.telegram.editMessageReplyMarkup(
    CONFIG.TG_SUGGESTION_CHAT_ID,
    postData.review.buttonsMsgId,
    undefined,
    BUTTONS_MARKUP.ACCEPT_OR_REJECT(postData.id).reply_markup
  );
}
